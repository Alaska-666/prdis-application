version: '3'
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
  eureka:
    build: eureka
    image: eureka
    ports:
      - "8761:8761"
  currency:
    build: currency
    image: currency
    ports:
      - "8081:8081"
    depends_on:
      - eureka
      - postgres
  weather:
    build: weather
    image: weather
    ports:
      - "8082:8082"
    depends_on:
      - eureka
      - postgres
  prediction:
    build: prediction
    image: prediction
    ports:
      - "8083:8083"
    depends_on:
      - eureka
      - currency
      - weather
  prometheus:
    image: prom/prometheus:v2.26.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - eureka
      - currency
      - weather
      - prediction
  grafana:
    image: grafana/grafana:7.5.5
    container_name: grafana
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - prometheus